 Main entrypoint - a complete udon document
+-----------------+-----------------+-----+----------------+-------------------------+
| document()::[]  |                 |     |                | :data_or_child          |
+-----------------+-----------------+-----+-----------------+------------------------+
| :data_or_child  | [\n]            |     | b>>a           | :data                   |
| :data_or_child  | [ \t]           | >>b |                | :data_or_child          |
| :data_or_child  | [#|]            |     | b>> ; a>>s     | :child                  |
| :data_or_child  | .               |     | b>>a           | :data                   |
+-----------------+-----------------+-----+----------------+-------------------------+
| :data           | [\n]            | >>a | a>>s           | :data_or_child          |
| :data           | .               | >>a |                | :data                   |
+-----------------+-----------------+-----+----------------+-------------------------+
| :child          | [#]             | >>  |                | comment(:data_or_child) |
| :child          | [|]             | >>  |                | node(:data_or_child)    |
| {eof}           |                 |     | b>>a;  a>>s    | <done>                  |
+-----------------+-----------------+-----+----------------+-------------------------+
# TODO: lots more children

 Block comments
+-----------------+-----------------+-----+-----------------+------------------------+
| comment(retstate)::U |            |     | ibase=$indent+1 | :first:ws              |
:                 :                 :     : ipar=$indent    :                        :
+-----------------+-----------------+-----+-----------------+------------------------+
| :first:ws       | [ \t]           | >>  | ibase += 1      | :first:ws              |
| :first:ws       | [\n]            | >>  |                 | :nl                    |
| :first:ws       | .               | >>a |                 | :data                  |
+-----------------+-----------------+-----+----------------+-------------------------+
| :data           | [\n]            | >>  | a>>s            | :nl                    |
| :data           | .               | >>a |                 | :data                  |
+-----------------+-----------------+-----+----------------+-------------------------+
| :nl             | {$indent>ibase} |     |                 | :data                  |
| :nl             | [ \t]           | >>  |                 | :nl                    |
| :nl             | [\n]            | >>a | a>>s            | :nl                    |
| :nl             | {$indent<=ipar} |     | s>>p            | <retstate>             |
| :nl             | .               | >>a | ibase=$indent   | :data                  |
+-----------------+-----------------+-----+----------------+-------------------------+
| {eof}           |                 |     | a>>s; s>>p      | <retstate>             |
+-----------------+-----------------+-----+-----------------+------------------------+

 Nodes
+-----------------+-----------------+-----+-----------------+------------------------+
| node(retstate)::U |               |     | ipar=$indent    | :ident                 |
:                 :                 :     :                 :                        :
+-----------------+-----------------+-----+-----------------+------------------------+
| :ident          | {eof?}          |     | error('er1')    | <retstate>             |
| :ident          | [ \t]           | >>  |                 | :ident:nxt             |
| :ident          | [\n]            | >>  |                 | :ident:nl              |
| :ident          | [.{\[]          |     |                 | :ident:nxt             |
| :ident          | .               |     |                 | cstr(:ident:nameret)   |
| :ident:nameret  |                 |     | s.name>>        | :ident:nxt             |
:                 :                 :     : s.c.pop>>s.name :                        :
+-----------------+-----------------+-----+-----------------+------------------------+
| :ident:nxt      | {eof?}          |     | s>>p            | <retstate>             |
| :ident:nxt      | [\[]            | >>  |                 | idstr(:ident:idret)    |
| :ident:nxt      | [.]             | >>  | error('nyi')    | <retstate>             |
| :ident:nxt      | [\n]            | >>  |                 | :ident:nl              |
| :ident:nxt      | [ \t]           | >>  |                 | :ident:nxt             |
| :ident:nxt      | .               |     |                 | cstr(:ident:a_or_c)    |
| :ident:idret    |                 |     | id=['id',s.c.pop] | :ident:nxt           |
:                 :                 :     : id>>s.a         :                        : # two lines here because of genmachine defect
+-----------------+-----------------+-----+-----------------+------------------------+
| :ident:nl       | {eof?}          |     | error('er3')    | <retstate>             |
| :ident:nl       | [ \t]           | >>  |                 | :ident:nl              |
| :ident:nl       | [\n]            | >>  |                 | :ident:nl              |
| :ident:nl       | {$indent<=ipar} |     | s>>p            | <retstate>             |
| :ident:nl       | .               |     | ibase=$indent   | :ident:nxt             |
+-----------------+-----------------+-----+-----------------+------------------------+
| :ident:a_or_c   | {eof?}          |     | a>>s.c.last     | <retstate>             |
:                 :                 :     : s>>p            :                        :
| :ident:a_or_c   | [:]             | >>  | a>>             | :ident:attr:val        |
:                 :                 :     : s.c.pop>>aname  :                        :
| :ident:a_or_c   | [ \t]           | >>a |                 | :ident:a_or_c          |
| :ident:a_or_c   | [\n]            | >>a | a>>s.c.last     | :ident:nl              | # was child
| :ident:a_or_c   | .               | >>a |                 | :ident:child           |
+-----------------+-----------------+-----+-----------------+------------------------+
| :ident:child    | {eof?}          |     | a>>s            | <retstate>             |
:                 :                 :     : s>>p            :                        :
| :ident:child    | [\n]            | >>a | a>>s            | :ident:child:nl        |
| :ident:child    | .               | >>a |                 | :ident:child           |
+-----------------+-----------------+-----+-----------------+------------------------+
| :ident:child:nl | .               |     | error('nyi')    | <retstate>             |
| :ident:attr:val | .               |     | error('nyi')    | <retstate>             |
+-----------------+-----------------+-----+-----------------+------------------------+

 Basic Control Strings
+-----------------+-----------------+-----+-----------------+------------------------+
| cstr(retstate)  |                 |     | nst=0           | :first                 |
| :first          | {eof?}          |     | a>>>p           | <retstate>             |
| :first          | [(]             | >>  | nst=1           | :delimited             |
| :first          | [ \t\n]         |     | a>>>p           | <retstate>             |
| :first          | .               | >>a |                 | :normal                |
+-----------------+-----------------+-----+-----------------+------------------------+
| :delimited      | [\\]            | >>b |                 | :delimited:esc         |
| :delimited      | [(]             | >>a | nst+=1          | :delimited             |
| :delimited      | [)]             | >>  | nst-=1          | :delimited:donecheck   |
| :delimited      | .               | >>a |                 | :delimited             |
+-----------------+-----------------+-----+-----------------+------------------------+
| :delimited:donecheck | {nst==0}   |     | a>>>p           | <retstate>             |
| :delimited:donecheck | .          |     | ')'>>a          | :delimited             |
+-----------------+-----------------+-----+-----------------+------------------------+
| :delimited:esc  | [\\]            | >>  |                 | :delimited:esc:2       |
| :delimited:esc  | [()]            | >>a |                 | :delimited             | # Escaped parenths
| :delimited:esc  | .               | >>b | b>>a            | :delimited             |
+-----------------+-----------------+-----+-----------------+------------------------+
| :delimited:esc:2 | [()]           |     | b>>a            | :delimited             | # Escaped backslash before parenths -> \ and actual (
| :delimited:esc:2 | .              | >>b | '\\'>>a; b>>a   | :delimited             | # Just two backslashes, moving on
+-----------------+-----------------+-----+-----------------+------------------------+
| :normal         | {eof?}          |     | a>>>p           | <retstate>             |
| :normal         | [\\]            | >>b |                 | :normal:esc            |
| :normal         | [\[\s\n\t.]     |     | a>>>p           | <retstate>             |
| :normal         | .               | >>a |                 | :normal                |
+-----------------+-----------------+-----+-----------------+------------------------+
| :normal:esc     | {eof?}          |     | b>>a; a>>>p     | <retstate>             |
| :normal:esc     | [\[\s\t.]       | >>a |                 | :normal                |
| :normal:esc     | .               | >>b | b>>a            | :normal                |
+-----------------+-----------------+-----+-----------------+------------------------+

 ID Strings - like cstr but with square brackets
+-----------------+-----------------+-----+-----------------+------------------------+
| idstr(retstate) |                 |     | nst=1           | :delimited             |
| :delimited      | [\\]            | >>b |                 | :delimited:esc         |
| :delimited      | [\[]            | >>a | nst+=1          | :delimited             |
| :delimited      | [\]]            | >>  | nst-=1          | :delimited:donecheck   |
| :delimited      | .               | >>a |                 | :delimited             |
+-----------------+-----------------+-----+-----------------+------------------------+
| :delimited:donecheck | {nst==0}   |     | a>>>p           | <retstate>             |
| :delimited:donecheck | .          |     | ']'>>a          | :delimited             |
+-----------------+-----------------+-----+-----------------+------------------------+
| :delimited:esc  | [\\]            | >>  |                 | :delimited:esc:2       |
| :delimited:esc  | [\[\]]          | >>a |                 | :delimited             | # Escaped parenths
| :delimited:esc  | .               | >>b | b>>a            | :delimited             |
+-----------------+-----------------+-----+-----------------+------------------------+
| :delimited:esc:2 | [\[\]]         |     | b>>a            | :delimited             | # Escaped backslash before parenths -> \ and actual [
| :delimited:esc:2 | .              | >>b | '\\'>>a; b>>a   | :delimited             | # Just two backslashes, moving on
+-----------------+-----------------+-----+-----------------+------------------------+
